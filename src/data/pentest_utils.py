import time
import json
from pathlib import Path

import requests
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry

def get_current_epoch():
    return time.time()

def save_attack_metadata(log_path, attack_name, start_time, end_time):
    log_path = Path(log_path)
    log_path.parent.mkdir(parents=True, exist_ok=True)

    metadata = {
        "attack": attack_name,
        "start_time_epoch": start_time,
        "end_time_epoch": end_time
    }

    if log_path.exists():
        with open(log_path, "r") as f:
            existing = json.load(f)
    else:
        existing = []

    existing.append(metadata)

    with open(log_path, "w") as f:
        json.dump(existing, f, indent=2)
        
def get_retry_session(retries=5, backoff_factor=1):
    session = requests.Session()

    retry_strategy = Retry(
        total=retries,
        backoff_factor=backoff_factor,
        status_forcelist=[429, 500, 502, 503, 504],
        allowed_methods=["GET", "POST"],
        raise_on_status=False
    )

    adapter = HTTPAdapter(max_retries=retry_strategy)
    session.mount("http://", adapter)
    session.mount("https://", adapter)

    return session
